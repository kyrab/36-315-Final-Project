ggplot(spotify %>% filter(Genre != "other"), aes(x = Popularity, y = Danceability)) +
geom_point(aes(color = Genre)) +
geom_density2d() +
labs(title = "Popularity and Danceability by Genre")
## By default, do not include R source code in the PDF. We do not want to see
## code, only your text and figures.
knitr::opts_chunk$set(echo = FALSE)
health <- read.csv("vietnam-health-cleaned.csv")
library(tidyverse)
library(mgcv)
library(pander)
health <- read.csv("vietnam-health-cleaned.csv")
names(health)
ggplot(health, aes(x = HadExam)) +
geom_bar(aes(fill = HadExam)) +
labs(
title = "Counts of HadExam",
x = "HadExam",
y = "Counts"
)
health %>% pull(HadExam) %>% table %>% pander
ggplot(health, aes(x = HadExam)) +
geom_bar(aes(fill = factor(HadExam))) +
labs(
title = "Counts of HadExam",
x = "HadExam",
y = "Counts"
)
ggplot(health, aes(x = HadExam)) +
geom_bar(aes(fill = factor(HadExam))) +
labs(
title = "Counts of HadExam",
x = "HadExam",
y = "Counts"
) +
theme(legend.position = "none")
ggplot(health, aes(x = actor(HadExam))) +
geom_bar(aes(fill = factor(HadExam))) +
labs(
title = "Counts of HadExam",
x = "HadExam",
y = "Counts"
) +
theme(legend.position = "none")
f
ggplot(health, aes(x = factor(HadExam))) +
geom_bar(aes(fill = factor(HadExam))) +
labs(
title = "Counts of HadExam",
x = "HadExam",
y = "Counts"
) +
theme(legend.position = "none")
ggplot(health, aes(x = place)) +
geom_bar(aes(fill = place)) +
labs(
title = "Counts of Survey Location",
x = "Survey Location",
y = "Counts"
)
ggplot(health, aes(x = place)) +
geom_bar(aes(fill = place)) +
labs(
title = "Counts of Survey Location",
x = "Survey Location",
y = "Counts"
) +
theme(x.axis.labels = "none")
ggplot(health, aes(x = place)) +
geom_bar(aes(fill = place)) +
labs(
title = "Counts of Survey Location",
x = "Survey Location",
y = "Counts"
) +
theme(axis.text.x=element_blank())
names(heath)
names(health)
ggplot(health, aes(x = HealthIns)) +
geom_bar(aes(fill = HealthIns)) +
labs(
title = "Counts by Job Status",
x = "Job Status",
y = "Counts"
) +
theme(legend.position = "none")
names(health)
health %>% pull(SuffInfo) %>% is.factor
health %>% pull(Tagibles) %>% is.factor
health %>% pull(Tangibles) %>% is.factor
health %>% pull(Sex) %>% table
health <- health %>%
mutate(
id = factor(id),
place = factor(place),
Age = factor(Age),
Sex = factor(Sex),
Jobstt = factor(Jobstt),
HealthIns = factor(HealthIns),
Wsttime = factor(Wsttime),
Wstmon = factor(Wstmon),
Lessbelqual = factor(Lessbelqual),
NotImp = factor(NotImp),
Tangibles = factor(Tangibles),
Empathy = factor(Empathy),
SuitFreq = factor(SuitFreq),
SuffInfo = factor(SuffInfo),
AttractInfo = factor(AttractInfo),
ImpressInfo = factor(ImpressInfo),
PopularInfo = factor(PopularInfo)
)
ggplot(health, aes(x = place)) +
geom_bar(aes(fill = place)) +
labs(
title = "Counts of Survey Location",
x = "Survey Location",
y = "Counts"
) +
theme(axis.text.x = element_blank())
health %>% pull(place) %>% table %>% pander
ggplot(health, aes(x = Age)) +
geom_histogram(fill = "lightblue") +
labs(title = "Age of Survey Responders", x = "Age")
library(tidyverse)
library(mgcv)
library(pander)
health <- read.csv("vietnam-health-cleaned.csv")
health <- health %>%
mutate(
id = factor(id),
place = factor(place),
Sex = factor(Sex),
Jobstt = factor(Jobstt),
HealthIns = factor(HealthIns),
Wsttime = factor(Wsttime),
Wstmon = factor(Wstmon),
Lessbelqual = factor(Lessbelqual),
NotImp = factor(NotImp),
Tangibles = factor(Tangibles),
Empathy = factor(Empathy),
SuitFreq = factor(SuitFreq),
SuffInfo = factor(SuffInfo),
AttractInfo = factor(AttractInfo),
ImpressInfo = factor(ImpressInfo),
PopularInfo = factor(PopularInfo)
)
ggplot(health, aes(x = Age)) +
geom_histogram(fill = "lightblue") +
labs(title = "Age of Survey Responders", x = "Age")
ggplot(health, aes(x = Sex)) +
geom_bar(aes(fill = Sex)) +
labs(
title = "Counts by Sex",
x = "Sex",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(Sex) %>% table %>% pander
ggplot(health, aes(x = Jobstt)) +
geom_bar(aes(fill = JobStt)) +
labs(
title = "Counts by Job Status",
x = "Job Status",
y = "Counts"
) +
theme(legend.position = "none")
ggplot(health, aes(x = Jobstt)) +
geom_bar(aes(fill = Jobstt)) +
labs(
title = "Counts by Job Status",
x = "Job Status",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(Jobstt) %>% table %>% pander
ggplot(health, aes(x = height)) +
geom_histogram(fill = "lightblue") +
labs(title = "Heights of Survey Responders", x = "Height")
ggplot(health, aes(x = height)) +
geom_histogram(fill = "lightblue", bins = 20) +
labs(title = "Heights of Survey Responders", x = "Height")
ggplot(health, aes(x = weight)) +
geom_histogram(fill = "lightblue") +
labs(title = "Weights of Survey Responders", x = "Weight")
ggplot(health, aes(x = BMI)) +
geom_histogram(fill = "lightblue") +
labs(title = "BMI's of Survey Responders", x = "BMI")
ggplot(health, aes(x = HealthIns)) +
geom_bar(aes(fill = HealthIns)) +
labs(
title = "Counts by Health Insurance",
x = "Health Insurance?",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(HealthIns) %>% table %>% pander
ggplot(health, aes(x = Wsttime)) +
geom_bar(aes(fill = Wsttime)) +
labs(
title = "Counts by Whether they Believe Checkups are a Waste of Time",
x = "Waste of Time?",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(Wsttime) %>% table %>% pander
ggplot(health, aes(x = Wstmon)) +
geom_bar(aes(fill = Wstmon)) +
labs(
title = "Counts by Whether they Believe Checkups are a Waste of Money",
x = "Waste of Money?",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(Wstmon) %>% table %>% pander
ggplot(health, aes(x = Lessbelqual)) +
geom_bar(aes(fill = Lessbelqual)) +
labs(
title = "Counts by Whether they have Faith in Medical Service",
x = "Have Faith in Medical Service?",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(Lessbelqual) %>% table %>% pander
ggplot(health, aes(x = NotImp)) +
geom_bar(aes(fill = NotImp)) +
labs(
title = "Counts by Whether they Believe Medical Service is Unimportant",
x = "Believe Medical Service is Unimportant?",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(NotImp) %>% table %>% pander
ggplot(health, aes(x = Tangibles)) +
geom_bar(aes(fill = Tangibles)) +
labs(
title = "Counts by Perceived Quality of Medical Staff and Equipment",
x = "Perceived Quality of Medical Staff and Equipment",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(Tangibles) %>% table %>% pander
ggplot(health, aes(x = Empathy)) +
geom_bar(aes(fill = Empathy)) +
labs(
title = "Counts by Perceived Thoughtfulness of Staff",
x = "Perceived Thoughtfulness of Staff",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(Empathy) %>% table %>% pander
ggplot(health, aes(x = SuitFreq)) +
geom_bar(aes(fill = SuitFreq)) +
labs(
title = "Counts by How Often Checkups Should Be Done",
x = "How Often Checkups Should Be Done",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(SuitFreq) %>% table %>% pander
health <- health %>%
mutate(
id = factor(id),
place = factor(place),
Sex = factor(Sex),
Jobstt = factor(Jobstt),
HealthIns = factor(HealthIns),
Wsttime = factor(Wsttime),
Wstmon = factor(Wstmon),
Lessbelqual = factor(Lessbelqual),
NotImp = factor(NotImp),
Tangibles = factor(Tangibles),
Empathy = factor(Empathy),
SuitFreq = factor(SuitFreq, levels = c("6m", "12m", "18m", "g18m")),
SuffInfo = factor(SuffInfo),
AttractInfo = factor(AttractInfo),
ImpressInfo = factor(ImpressInfo),
PopularInfo = factor(PopularInfo)
)
ggplot(health, aes(x = SuitFreq)) +
geom_bar(aes(fill = SuitFreq)) +
labs(
title = "Counts by How Often Checkups Should Be Done",
x = "How Often Checkups Should Be Done",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(SuitFreq) %>% table %>% pander
ggplot(health, aes(x = SuffInfo)) +
geom_bar(aes(fill = SuffInfo)) +
labs(
title = "Counts by Sufficiency of Information in Checkups",
x = "Sufficiency Rating",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(SuffInfo) %>% table %>% pander
ggplot(health, aes(x = AttractInfo)) +
geom_bar(aes(fill = AttractInfo)) +
labs(
title = "Counts by Attractiveness of Information in Checkups",
x = "Attractiveness Rating",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(AttractInfo) %>% table %>% pander
ggplot(health, aes(x = ImpressInfo)) +
geom_bar(aes(fill = ImpressInfo)) +
labs(
title = "Counts by Impressness of Information in Checkups",
x = "Impressiveness Rating",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(ImpressInfo) %>% table %>% pander
ggplot(health, aes(x = PopularInfo)) +
geom_bar(aes(fill = PopularInfo)) +
labs(
title = "Counts by Popularity of Information in Checkups",
x = "Popularity Rating",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(PopularInfo) %>% table %>% pander
health %>% pull(HadExam) %>% table %>% pander
ggplot(health, aes(x = Tangibles + Empathy)) +
geom_bar(aes(fill = Tangibles + Empathy)) +
labs(
title = "Counts by Perceived Quality of Medical Staff and Equipment",
x = "Perceived Quality of Medical Staff and Equipment",
y = "Counts"
) +
theme(legend.position = "none")
ggplot(health, aes(x = factor(as.numeric(Tangibles) + as.numeric(Empathy)))) +
geom_bar(aes(fill = factor(as.numeric(Tangibles) + as.numeric(Empathy)))) +
labs(
title = "Counts by Perceived Quality of Medical Staff and Equipment",
x = "Perceived Quality of Medical Staff and Equipment",
y = "Counts"
) +
theme(legend.position = "none")
"5" + "4"
"5" + 4
as.numeric("%")
as.numeric("5")
c("1", "2", "3") %>% as.numeri
c("1", "2", "3") %>% as.numeric
library(tidyverse)
library(mgcv)
library(pander)
health <- read.csv("vietnam-health-cleaned.csv")
health <- health %>%
mutate(
totalQuality = Tangibles + Empathy,
QualInfo = SuffInfo + AttractInfo + ImpressInfo + PopularInfo
) %>%
mutate(
id = factor(id),
place = factor(place),
Sex = factor(Sex),
Jobstt = factor(Jobstt),
HealthIns = factor(HealthIns),
Wsttime = factor(Wsttime),
Wstmon = factor(Wstmon),
Lessbelqual = factor(Lessbelqual),
NotImp = factor(NotImp),
Tangibles = factor(Tangibles),
Empathy = factor(Empathy),
totalQuality = factor(totalQuality),
SuitFreq = factor(SuitFreq, levels = c("6m", "12m", "18m", "g18m")),
SuffInfo = factor(SuffInfo),
AttractInfo = factor(AttractInfo),
ImpressInfo = factor(ImpressInfo),
PopularInfo = factor(PopularInfo),
QualInfo = factor(QualInfo)
)
ggplot(health, aes(x = totalQuality)) +
geom_bar(aes(fill = totalQuality)) +
labs(
title = "Counts by Perceived Quality of Medical Service",
x = "Perceived Quality of Medical Service",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(totalQuality) %>% table %>% pander
ggplot(health, aes(x = QualInfo)) +
geom_bar(aes(fill = QualInfo)) +
labs(
title = "Counts by Perceived Quality of Information",
x = "Perceived Quality of Information",
y = "Counts"
) +
theme(legend.position = "none")
health %>% pull(QualInfo) %>% table %>% pander
ggplot(health, aes(x = totalQuality, y = QualInfo)) +
geom_point()
ggplot(health, aes(x = as.numeric(totalQuality), y = as.numeric(QualInfo))) +
geom_point()
names(health)
model_1 <- glm(HadExam ~ Age + Sex + Jobstt + height + weight + BMI +
Wsttime + Wstmon + Lessbelqual + Not Imp + Tangibles + Empathy +
model_1 <- glm(HadExam ~ Age + Sex + Jobstt + height + weight + BMI +
Wsttime + Wstmon + Lessbelqual + Not Imp + Tangibles + Empathy +
model_1 <- glm(HadExam ~ Age + Sex + Jobstt + height + weight + BMI +
Wsttime + Wstmon + Lessbelqual + NotImp + Tangibles + Empathy +
SuitFreq, family = binomial, data = health)
model_2 <- step(model_1, direction = "backward", trace = 0)
names(health)
model_3 <- glm(HadExam ~ Age + Sex + Jobstt + height + weight + BMI +
Wsttime + Wstmon + Lessbelqual + NotImp + Tangibles + Empathy +
SuitFreq + HealthIns * QualInfo,
family = binomial, data = health)
anova(model_3, model_1, test = "Chisq")
anova(model_3, model_2, test = "Chisq")
model_2 <- step(model_1, direction = "backward", trace = 0)
model_2
model_3 <- glm(HadExam ~ Sex + Jobstt + Wsttime + NotImp + Tangibles + SuitFreq +
HealthIns * QualInfo, family = binomial, data = health)
anova(model_3, model_1, test = "Chisq")
anova(model_3, model_2, test = "Chisq")
names(health)
model_3 <- glm(HadExam ~ Sex + Jobstt + Wsttime + NotImp + Tangibles + SuitFreq +
HealthIns * SuffInfo + HealthIns * AttractInfo + HealthIns *
ImpressInfo + HealthIns * PopularInfo, family = binomial,
data = health)
anova(model_3, model_1, test = "Chisq")
anova(model_3, model_2, test = "Chisq")
anova(model_3, model_1, test = "Chisq") %>% pander
library(np)
library(FNN)
install.packages("FNN")
library(FNN)
spline3 <- smooth.spline(health$HadExam ~ fitted.values(model_3), df = 10)
kernel3 <- npreg(health$HadExam ~ fitted.values(model_3), bws = 0.075)
knn3 <- knn.reg(fitted.values(model_3), y = health$HadExam, k = 35)
spline3 <- smooth.spline(health$HadExam ~ fitted.values(model_3), df = 10)
kernel3 <- npreg(health$HadExam ~ fitted.values(model_3), bws = 0.075)
knn3 <- knn.reg(fitted.values(model_3), y = health$HadExam, k = 35)
plot(
fitted.values(model_3), fitted.values(spline1),
pch="", xlab="Model 3 fitted values",
main="Calibration Plot for Model 3",
ylab="Smoothed fraction of Y=1"
)
spline3 <- smooth.spline(health$HadExam ~ fitted.values(model_3), df = 10)
kernel3 <- npreg(health$HadExam ~ fitted.values(model_3), bws = 0.075)
knn3 <- knn.reg(fitted.values(model_3), y = health$HadExam, k = 35)
plot(
fitted.values(model_3), fitted.values(spline3),
pch="", xlab="Model 3 fitted values",
main="Calibration Plot for Model 3",
ylab="Smoothed fraction of Y=1"
)
points(fitted.values(model_3), fitted.values(spline3), pch="o", cex=.5)
points(fitted.values(model_3), fitted.values(kernel3), pch="x", cex=.5,col="blue")
points(fitted.values(model_3), knn3$pred, pch="k", cex=.5, col="red")
legend(
"bottomright",
pch=c("o","x","k"),
col=c("black","blue","red"),
legend=c("Spline","Kernel","KNN")
)
abline(0, 1)
spline3 <- smooth.spline(health$HadExam ~ fitted.values(model_3), df = 10)
kernel3 <- npreg(health$HadExam ~ fitted.values(model_3), bws = 0.075)
knn3 <- knn.reg(fitted.values(model_3), y = health$HadExam, k = 35)
plot(
fitted.values(model_3), fitted.values(model_1),
pch="", xlab="Model 3 fitted values",
main="Calibration Plot for Model 3",
ylab="Smoothed fraction of Y=1"
)
points(fitted.values(model_3), fitted.values(spline3), pch="o", cex=.5)
points(fitted.values(model_3), fitted.values(kernel3), pch="x", cex=.5,col="blue")
points(fitted.values(model_3), knn3$pred, pch="k", cex=.5, col="red")
legend(
"bottomright",
pch=c("o","x","k"),
col=c("black","blue","red"),
legend=c("Spline","Kernel","KNN")
)
abline(0, 1)
spline3 <- smooth.spline(health$HadExam ~ fitted.values(model_3), df = 10)
kernel3 <- npreg(health$HadExam ~ fitted.values(model_3), bws = 0.075)
knn3 <- knn.reg(fitted.values(model_3), y = health$HadExam, k = 35)
plot(
fitted.values(model_3), fitted.values(spline3),
pch="", xlab="Model 3 fitted values",
main="Calibration Plot for Model 3",
ylab="Smoothed fraction of Y=1"
)
points(fitted.values(model_3), fitted.values(spline3), pch="o", cex=.5)
points(fitted.values(model_3), fitted.values(kernel3), pch="x", cex=.5,col="blue")
points(fitted.values(model_3), knn3$pred, pch="k", cex=.5, col="red")
legend(
"bottomright",
pch=c("o","x","k"),
col=c("black","blue","red"),
legend=c("Spline","Kernel","KNN")
)
abline(0, 1)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
# Load the required libraries
library(tidyverse)
library(pander)
library(gridExtra)
library(wordcloud)
library(tm)
library(ggseas)
library(dendextend)
library(devtools)
install_github("vqv/ggbiplot")
